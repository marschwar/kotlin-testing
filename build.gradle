buildscript {
    ext {
        kotlin_version = '1.3.50'
        spek_version = '2.0+'
        mockk_version = '1.9'
        expect_version = '0.5+'
        kotlintest_version = '3.3+'
        assertj_version = '3.12+'
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version "1.3.50"
    id "org.jetbrains.kotlin.plugin.spring" version "1.3.50"
    id "idea"
}

repositories {
    mavenCentral()
    jcenter()
}

sourceCompatibility = JavaVersion.VERSION_1_8
compileKotlin.kotlinOptions {
    jvmTarget = "${sourceCompatibility}"
}
compileTestKotlin.kotlinOptions {
    jvmTarget = "${sourceCompatibility}"
}

sourceSets {
    spek {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

//Mark spek source set as test directory in intellij (configuration possibility is provided by idea gradle plugin)
idea {
    module {
        testSourceDirs += project.sourceSets.spek.kotlin.srcDirs
        inheritOutputDirs true
    }
}

configurations {
    spekTestImplementation.extendsFrom implementation
    spekImplementation.extendsFrom testImplementation
    spekRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
    // Use the Kotlin JDK 8 standard library.
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    implementation "org.jetbrains.kotlin:kotlin-reflect"

    // Use the Kotlin test library.
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit5:$kotlin_version"
    // Add the jupiter engine to execute the tests
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.0.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.0.0'

    spekImplementation "org.spekframework.spek2:spek-dsl-jvm:$spek_version"
    spekRuntimeOnly "org.spekframework.spek2:spek-runner-junit5:$spek_version"

    testImplementation "org.assertj:assertj-core:$assertj_version"

    testImplementation('org.amshove.kluent:kluent:1.56') {
        exclude group: "junit"
    }

    testImplementation "io.mockk:mockk:$mockk_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"

    testImplementation "io.kotlintest:kotlintest-runner-junit5:$kotlintest_version"
}

test {
    useJUnitPlatform()
}

task spek(type: Test) {
    description = 'Runs speks.'
    group = 'verification'

    useJUnitPlatform()

    testClassesDirs = sourceSets.spek.output.classesDirs
    classpath = sourceSets.spek.runtimeClasspath
    shouldRunAfter test
}

check.dependsOn spek
